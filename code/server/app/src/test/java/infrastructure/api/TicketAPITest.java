/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package infrastructure.api;

import framework.web.error.BadRequest;
import framework.web.error.Unauthorized;
import infrastructure.MailServerSkeleton;
import infrastructure.TestingUser;
import org.junit.jupiter.api.*;
import framework.db.DbManager;
import server.infrastructure.DbManagerImpl;

import java.net.UnknownHostException;
import java.sql.SQLException;

@TestMethodOrder(MethodOrderer.OrderAnnotation.class)
@TestInstance(TestInstance.Lifecycle.PER_CLASS)
public class TicketAPITest {
    private static DbManager db;
    private final MailServerSkeleton mail = new MailServerSkeleton();

    private final TestingUser o1 = new TestingUser("Organizer", "organizer@gmail.com", "password");

    @BeforeAll
    public void setup() throws SQLException, BadRequest, UnknownHostException, Unauthorized {
        db = new DbManagerImpl("ticket_api_test", true, true, true);

        // Make fake users
        o1.register(mail, db, false);
        o1.login(mail, db, false);
        o1.makeOrganizer(db, null, mail);
        try{
            o1.makeOrganizer(db, null, mail);
            Assertions.fail("Can't make a user an organizer if they're already an organizer.");
        }catch (Exception ignore){}
    }

    @Test
    @Order(1)
    public void createTicketTest() throws SQLException, Unauthorized {
        var session = o1.organizerSession(db, null);
    }

    @Test
    @Order(2)
    public void updateTicketTest() throws SQLException, Unauthorized {
        var session = o1.organizerSession(db, null);
    }

    @Test
    @Order(3)
    public void getTicketTest() throws SQLException, Unauthorized {
        var session = o1.organizerSession(db, null);
    }

    @AfterAll
    public void close() {
        db.close();
    }
}
