<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">

    <script src="https://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.js"></script>
    <script src="/js/api.js" type="text/javascript"></script>
    <!-- Redirects user to login when a page requires the user to have an account-->
    <script>utility.require_logged_in()</script>

    <!-- <meta name="viewport" content="initial-scale=1, width=device-width"> -->
    <link rel="stylesheet" href="/style/styles.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
        href="https://fonts.googleapis.com/css2?family=Caesar+Dressing&family=Caveat:wght@400..700&family=Special+Elite&display=swap"
        rel="stylesheet">
    <link href="https://use.fontawesome.com/releases/v5.0.1/css/all.css" rel="stylesheet">
    <link rel="icon" href="/images/logo.png" sizes="64x64" type="image/x-icon">

    <title>Ticket Express</title>

    <style>
        .log-container { width: 80%; margin: auto; padding: 10px; font-size: 14px;}
        .log-entry { padding: 10px; margin: 10px 0; border-radius: 5px; word-wrap: break-word; overflow-wrap: break-word; }
        .red { background-color: #3b0000; border-left: 5px solid red; }
        .yellow { background-color: #3b3b00; border-left: 5px solid #cc9900; }
        .blue { background-color: #001b3b; border-left: 5px solid #004085; }
        .grey { background-color: #2e2e2e; border-left: 5px solid #606060; }
        .log-message { font-weight: bold; word-wrap: break-word; overflow-wrap: break-word; }
        .log-source { font-size: 0.85em; opacity: 0.8; }
        .log-stacktrace { font-family: monospace; white-space: pre-wrap; background-color: rgba(255, 255, 255, 0.1); padding: 5px; border-radius: 5px; margin-top: 5px; font-size: 0.85em; }
     </style>
</head>
<body>
    <div src="/partials/header.html" type="text/x-html-template"></div>

    <script src="get_log_levels()" type="text/x-handlebars-template">
        <select onChange="changed_level(this);">
            {{#each options}}
                <option value="{{this}}" 
                {{#if (eq this ../selectedValue)}}
                    selected
                {{/if}}
                >{{this}}</option>
            {{/each}}
        </select>

    </script>
    <div></div>

    <script id="loglist" type="text/x-handlebars-template">
        {{#each (reverseArray @root)}}
        <div class="log-entry {{logColor level_s}}">
            <div class="log-message">{{level_s}}: {{message}}</div>
            <div class="log-source">{{sourceClassName}}.{{sourceMethodName}} - {{formatTime millis}}</div>
            {{#if thrown}}
            <div class="log-stacktrace">{{thrown}}</div>
            {{/if}}
        </div>
        {{/each}}
    </script>
    <div class="log-container"></div>


    <div src="/partials/footer.html" type="text/x-html-template"></div>
</body>

     <script>
        async function changed_level(thing){
            try{
                await api.admin.set_log_level(thing.value, cookies.getSession());
            }catch({error, code}){
                alert(error + " " + code);
            }
        }
        async function get_log_levels(){
            return {
                options: await api.admin.get_log_levels(cookies.getSession()),
                selectedValue: await api.admin.get_log_level(cookies.getSession())
            }
        }

        const list = document.getElementById("loglist");
        const log_template = Handlebars.compile(list.innerHTML);
        Handlebars.registerHelper('reverseArray', (array) => array==null?null:array.reverse());
        async function show_logs(){
            try{
                let logs = await api.admin.get_server_logs(cookies.getSession());
                list.nextElementSibling.innerHTML = log_template(logs);
            }catch({error, code}){
                alert(error + " " + code);
                window.location.href = '/account/login';
            }
        }
        show_logs();
        setInterval(show_logs, 1000);
     </script>
</html>