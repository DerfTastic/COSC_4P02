<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
    <script src="/js/api.js"></script>
    <link rel="stylesheet" href="/style/styles.css">
    <link rel="icon" href="/images/logo.png" sizes="64x64" type="image/x-icon">
    <script src="https://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.js"></script>
    <style>
        .content {
            padding: 1rem;
            display: flex;
            flex-direction: row;
            gap: 20px;
        }

        .payment {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            align-self: stretch;
            background: rgba(238, 238, 240, 0.1);
            backdrop-filter: blur(15px);
            border-radius: 12px;
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2);
            color: #eeeef0;
            padding: 15px;
            flex: 0.7;
        }

        .payment-top {
            display: flex;
            flex-direction: column;
            justify-content: flex-end;
            align-items: flex-start;
            gap: 5px;
            align-self: stretch;
            border-bottom: 3px solid var(--L-Blue, #778DA9);
        }

        .payment-title {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        h1 {
            color: var(--Light, #eeeef0);
            font-size: 48px;
            font-style: normal;
            font-weight: 700;
            line-height: normal;
            margin-top: 15px;
            margin-bottom: 15px;
        }

        p {
            margin-top: 10px;
            margin-bottom: 10px;
        }

        .cards {
            font-size: 36px;
        }

        .card-container {
            display: flex;
            padding: 0px 15px;
            flex-direction: column;
            align-items: flex-start;
        }

        .credit-cards {
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .pay-info {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            gap: 10px;
            align-self: stretch;
        }

        .card-info {
            width: 50%;
        }

        .payment h2 {
            color: var(--Light, #eeeef0);
            font-size: 36px;
            font-style: normal;
            font-weight: 700;
            line-height: normal;
            margin-top: 10px;
            margin-bottom: 10px
        }

        .form {
            display: flex;
            padding: 0px 15px;
            flex-direction: column;
            align-items: flex-start;
            align-self: stretch;
            gap: 10px;
        }

        .input-container {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            align-self: stretch;
            gap: 5px;
            width: 100%;
        }

        .input-row {
            display: flex;
            align-items: flex-start;
            align-self: stretch;
            justify-content: space-between;
            gap: 10px;
            width: 100%;
        }

        label {
            font-size: 0.7rem;
            margin-bottom: 5px;
            font-weight: 600;
            text-transform: uppercase;
        }

        .pay-info input {
            background: rgba(238, 238, 240, 0.1);
            backdrop-filter: blur(12px);
            border: 1px solid rgba(238, 238, 240, 0.3);
            border-radius: 5px;
            color: #eeeef0;
            font-size: 16px;
            outline: none;
            transition: box-shadow 0.3s ease;
            align-self: stretch;
            height: 36px;

        }

        .cvv-description {
            display: flex;
            flex-direction: column;
            justify-content: flex-end;
            align-items: flex-start;
            gap: 5px;
        }

        .cvv-description p {
            color: var(--Light, #E6E6E8);
            font-size: 12px;
            font-style: normal;
            font-weight: 400;
            line-height: normal;
        }

        .order-summary {
            display: flex;
            flex: 0.3;
            align-self: stretch;
            justify-content: space-between;
        }

        .summary-title {
            display: flex;
            padding-bottom: 10px;
            flex-direction: column;
            justify-content: flex-end;
            align-items: flex-start;
            gap: 5px;
        }

        h4 {
            color: var(--Light, #E6E6E8);
            font-size: 24px;
            font-style: normal;
            font-weight: 700;
            line-height: normal;
            margin: 5px 0;
        }

        .price {
            display: flex;
            padding: 0px 15px;
            justify-content: space-between;
            align-items: flex-start;
            align-self: stretch;
        }

        .item {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            gap: 5px;
        }

        .sub-total {
            display: flex;
            padding: 5px 15px 5px 0px;
            justify-content: space-between;
            align-items: flex-start;
            align-self: stretch;
        }

        .total {
            border-top: 3px solid var(--L-Blue, #778DA9);
        }

        .order-summary button {
            align-self: center;
            padding: 10px;
            background-color: #2a3e59;
            border: none;
            border-radius: 5px;
            color: #eeeef0;
            font-size: 1rem;
            font-weight: 600;
            letter-spacing: 1px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            font-family: Georgia, 'Times New Roman', Times, serif;
        }

        .order-summary button:hover {
            background: #1b263b;
        }

        .order-summary a {
            text-decoration: none;
            color: #eeeef0;
        }

        .order-summary a:visited {
            text-decoration: none;
            color: #eeeef0;
        }

        @media(max-width:1024px) {
            .content {
                flex-direction: column;
            }
        }

        @media(max-width:760px) {
            .input-row {
                flex-wrap: wrap;
            }
        }
    </style>
</head>

<body>
    <div class="sticky" src="/partials/header.html" type="text/x-html-template"></div>
    <div class="content">
        <div class="payment">
            <div class="payment-title">
                <button type="button" onclick="autoFail1()">Fail Name</button>
                <button type="button" onclick="autoFail2()">Fail Card</button>
                <button type="button" onclick="autoPass()">success</button>
            </div>
            <div class="payment-top">
                <div class="payment-title">
                    <h1>Payment - credit card</h1>
                    <!--i class="fa-regular fa-credit-card cards"></i--->
                </div>
                <div class="card-container">
                    <div class="credit-cards">
                        <i class="fa-brands fa-cc-visa cards"></i>
                        <i class="fa-brands fa-cc-mastercard cards"></i>
                        <i class="fa-brands fa-cc-amex cards"></i>
                    </div>
                    <p>We accept Visa, Mastercard, and American Express</p>
                </div>
            </div>
            <div class="pay-info card-info">
                <h2>Card Information</h2>
                <form class="form" action="/save_somewhere"> <!---CHANGE ACTION!!!-->
                    <div class="input-container">
                        <label for="cc-num">*Card Number</label>
                        <input type="number" id="cc-num" name="cc-num" class="no-spinners" required>
                    </div>
                    <div class="input-row">
                        <div class="input-container">
                            <label for="cc-e-Month">*Expiry Month</label>
                            <input type="number" id="cc-e-Month" name="cc-e-Month" pattern="(0[1-9]|1[0-2])"
                                placeholder="MM" class="no-spinners" required>
                        </div>
                        <div class="input-container">
                            <label for="cc-e-Year">*Expiry Year</label>
                            <input type="number" id="cc-e-Year" name="cc-e-Year" pattern="(0[1-9]|[12][0-9]|3[01])])"
                                placeholder="YY" min="" 25" max="" 99" class="no-spinners" required>
                        </div>
                    </div>
                    <div class="input-row">
                        <div class="input-container">
                            <label for="cc-cvv">*CVV</label>
                            <input type="number" id="cc-cvv" name="cc-cvv" pattern="\d{3}" maxlength="3"
                                class="no-spinners" required>
                        </div>
                        <div class="cvv-description input-container">
                            <p>This 3 or 4 digit is on the back or front of your card</p>
                        </div>
                    </div>
                </form>
            </div>
            <div class="pay-info">
                <h2>Billing Information</h2>
                <form class="form" action="/save_somewhere"> <!---CHANGE ACTION!!!-->
                    <div class="input-row">
                        <div class="input-container">
                            <label for="fname">*First Name</label>
                            <input type="text" id="fname" name="fname" required>
                        </div>
                        <div class="input-container">
                            <label for="lname">*Last Name</label>
                            <input type="text" id="lname" name="lname" required>
                        </div>
                    </div>
                    <div class="input-row">
                        <div class="input-container">
                            <label for="phone">*Phone Number</label>
                            <input type="tel" id="phone" name="phone" required>
                        </div>
                        <div class="input-container">
                            <label for="phone-ext">Ext (optional)</label>
                            <input type="number" id="phone-ext" name="phone-ext" class="no-spinners">
                        </div>
                    </div>
                    <div class="input-container">
                        <label for="address">*Address</label>
                        <input type="text" id="address" name="address" required>
                    </div>
                    <div class="input-row">
                        <div class="input-container">
                            <label for="city">*City</label>
                            <input type="text" id="city" name="city" required>
                        </div>
                        <div class="input-row">
                            <div class="input-container">
                                <label for="province">*Province</label>
                                <input type="text" id="province" name="province" required>
                            </div>
                            <div class="input-container">
                                <label for="postal">*Postal Code</label>
                                <input type="text" id="postal" name="postal" placeholder="X0X 0X0" required>
                            </div>
                        </div>
                    </div>
                    <div class="input-container">
                        <label for="contry">*Country</label>
                        <input type="text" id="contry" name="contry" required>
                    </div>
                </form>
            </div>
        </div>
        <script>
            async function get_estamate() {
                var items = new URLSearchParams(window.location.search).get("items");
                items = JSON.parse(items);
                console.trace("get_estamate() called");
                return api.payment.create_estimate(items);
            }

            async function place_order() {
                const payment = {
                    name: `${document.getElementById("fname").value} ${document.getElementById("lname").value}`,
                    billing: `${document.getElementById("address").value}, ${document.getElementById("city").value}, ${document.getElementById("province").value}, ${document.getElementById("postal").value}, ${document.getElementById("contry").value}`,
                    card: document.getElementById("cc-num").value,
                    exparation: `${document.getElementById("cc-e-Month").value}/${document.getElementById("cc-e-Year").value}`,
                    code: document.getElementById("cc-cvv").value
                };
                var items = new URLSearchParams(window.location.search).get("items");
                items = JSON.parse(items);
                try {
                    const response = await api.payment.make_purchase({ payment, items });
                    window.location.href = `/shop/receipt?receipt_id=${response.payment_id}`;
                } catch ({ error, code }) {
                    alert(error);
                }
            }
            async function checkEmptyFields() {
                const fieldIds = [
                    "cc-num",
                    "cc-e-Month",
                    "cc-e-Year",
                    "cc-cvv",
                    "fname",
                    "lname",
                    "phone",
                    "address",
                    "city",
                    "province",
                    "postal",
                    "contry"
                ];

                let emptyFields = [];

                fieldIds.forEach(id => {
                    const element = document.getElementById(id);
                    if (!element || element.value.trim() === "") {
                        emptyFields.push(id);
                    }
                });

                if (emptyFields.length === 0) {
                    place_order();
                } else {
                    alert("Please fill in all required fields before placing your order.");
                }
            }

            function autoFail1() {
                document.getElementById("fname").value = "Ben";
                document.getElementById("lname").value = "TenBroeck";
                document.getElementById("cc-num").value = "3000000000000000";
                document.getElementById("cc-e-Month").value = "12";
                document.getElementById("cc-e-Year").value = "35";
                document.getElementById("cc-cvv").value = "123";

                // Billing info
                document.getElementById("address").value = "1812 Sir Isaac Brock Way";
                document.getElementById("city").value = "St. Catharines";
                document.getElementById("province").value = "ON";
                document.getElementById("postal").value = "L2S 3A1";
                document.getElementById("contry").value = "Canada";
                document.getElementById("phone").value = "9056885550";
            }

            function autoFail2() {
                document.getElementById("fname").value = "Parker";
                document.getElementById("lname").value = "TenBroeck";
                document.getElementById("cc-num").value = "4111111111111111";
                document.getElementById("cc-e-Month").value = "12";
                document.getElementById("cc-e-Year").value = "35";
                document.getElementById("cc-cvv").value = "123";

                // Billing info
                document.getElementById("address").value = "1812 Sir Isaac Brock Way";
                document.getElementById("city").value = "St. Catharines";
                document.getElementById("province").value = "ON";
                document.getElementById("postal").value = "L2S 3A1";
                document.getElementById("contry").value = "Canada";
                document.getElementById("phone").value = "9056885550";
            }

            function autoPass() {
                document.getElementById("fname").value = "John";
                document.getElementById("lname").value = "Doe";
                document.getElementById("cc-num").value = "4111111111111111";
                document.getElementById("cc-e-Month").value = "12";
                document.getElementById("cc-e-Year").value = "35";
                document.getElementById("cc-cvv").value = "123";

                // Billing info
                document.getElementById("address").value = "1812 Sir Isaac Brock Way";
                document.getElementById("city").value = "St. Catharines";
                document.getElementById("province").value = "ON";
                document.getElementById("postal").value = "L2S 3A1";
                document.getElementById("contry").value = "Canada";
                document.getElementById("phone").value = "9056885550";
            }
        </script>
        <div class="payment order-summary">

            <script src="get_estamate()" type="text/x-handlebars-template">
                <h1>Order Estimate</h1>
                <!--<div class="sumary-title">
                    <h4>Event Name</h4>
                </div>---> 
                <div class="pay-info">
                    <div class="price">
                        <div class="item">
                            {{#each items}}
                            <p>{{name}}</p>
                            {{/each}}
                        </div>
                        <div class="item">
                            {{#each items}}
                            <p>{{formatPrice purchase_price}}</p>
                            {{/each}}
                        </div>
                    </div>
                    <div class="sub-total">
                        <div class="item">
                            <h4>Subtotal</h4>
                        </div>
                        <div class="item">
                            <h4>{{formatPrice subtotal}}</h4>
                        </div>
                    </div>
                    <div class="price">
                        <div class="item">
                            <p>Service Fee</p>
                            <p>Tax</p>
                        </div>
                        <div class="item">
                            <p>{{formatPrice fees}}</p>
                            <p>{{formatPrice gst}}</p>
                        </div>
                    </div>
                    <div class="sub-total total">
                        <div class="item">
                            <h4>Total</h4>
                        </div>
                        <div class="item">
                            <h4>{{formatPrice total}}</h4>
                        </div>
                    </div>
                </div>
            </script>
            <div class="pay-info"></div>
            <button type="button" onclick="checkEmptyFields()">Place Order</button>
            <h4>Security & Privacy</h4>
            <p>Every transaction on Ticket Express is secure. Any personal information you give us will be handled
                according to our <a href="/privacy.html">Privacy Policy</a>.</p>
        </div>
    </div>
    </div>
    <div src="/partials/footer.html" type="text/x-html-template"></div>
</body>

</html>